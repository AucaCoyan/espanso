{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JsonModel",
  "type": "object",
  "required": [
    "paths"
  ],
  "properties": {
    "buildRoot": {
      "description": "Optional path to the folder that contains the `compile-commands.json` (can be specified via --build-root).",
      "type": [
        "string",
        "null"
      ]
    },
    "command": {
      "description": "Optional path to the `clang-tidy` executable or command name",
      "type": [
        "string",
        "null"
      ]
    },
    "filterPost": {
      "description": "Optional list of globs to use for post-filtering. This filter will be applied for all paths _after_ they have been resolved. In contrast to the pre-filter, siblings of paths will not be filtered without the corresponding glob. E.g., \".git\" will not filter any files, only \".git/**\" would. Notice that only",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      }
    },
    "filterPre": {
      "description": "Optional list of globs used for efficiently pre-filtering paths. In contrast to the post-filter, searching will completely skip all paths and its siblings for any match with any pattern. E.g., [\".git\"] will skip all \".git\" folders completely. By default, i.e., if this field is not present in the configuration, the tool will skip all hidden paths and files. Set this entry to an empty list to prevent any kind of pre-filtering.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      }
    },
    "paths": {
      "description": "List of paths and/or globs. This list may contain paths or shell-style globs to define the files that should be filtered. Paths or globs that resolve to folders will be silently ignored. Any path contained in this list must be specified relative to the configuration file.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "tidyFile": {
      "description": "Optional path to a `.clang-tidy` yaml file (can be specified via --tidy). If no such path is provided by neither this field nor the command-line option, `clang-tidy` will perform a search for the `compile_commands.json` through all parent paths of the file to analyze.",
      "type": [
        "string",
        "null"
      ]
    },
    "tidyRoot": {
      "description": "Optional path where the `.clang-tidy` file should be copied to while executing.",
      "type": [
        "string",
        "null"
      ]
    }
  }
}
